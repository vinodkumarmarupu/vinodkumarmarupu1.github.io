swagger: '2.0'
info:
  description: "Various APIs developed by The Workbench Team"
  version: "0.1.0"
  title: "Workbench  API"
host: "workbenchapi-portal.apps-np.homedepot.com"
basePath: "/v1"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /users:
    get:
      tags:
        - "Users"
      description: "Users API"
      operationId: "getUsersByIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: userIds
          in: query
          description: "Enter userid value"
          required: true
          type: "string"
        - name: fields
          in: query
          description: "Enter the desired fields as comma separated"
          required: false
          type: "string"
        - name: offset
          in: query
          description: "Enter the desired offset"
          required: false
          type: "integer"
        - name: limit
          in: query
          description: "Enter the desired limit"
          required: false
          type: "integer"
      responses:
        '200':
          description: "Successful"
          examples:
            application/json: >
                {
                  "metadata": {
                  "count": 0,
                  "offset": 0,
                  "limit": 0
                        },
                    "users": [
                    {
                        "userId": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "fullName": "string",
                        "emailAddress": "string",
                        "deptNumber": "string",
                        "userActive": "string",
                        "siteNumber": "string",
                        "managerId": "string",
                        "jobTitle": "string",
                        "directReportees": [
                                "string"
                        ],
                    "insertDate": "string"
                        }
                        ]
                            }
                
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Users"
  '/users/{emailId}':
    get:
      tags:
        - "Users"
      description: "Users email API"
      operationId: "getUsersByemailIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: emailId
          in: path
          description: "Enter emailid  value"
          required: true
          type: "string"
        - name: fields
          in: query
          description: "Enter the desired fields as comma separated"
          required: false
          type: "string"
        - name: offset
          in: query
          description: "Enter the desired offset"
          required: false
          type: "integer"
        - name: limit
          in: query
          description: "Enter the desired limit"
          required: false
          type: "integer"
      responses:
        '200':
          description: "Successful"
          examples:
            application/json: >
                {
                  "metadata": {
                  "count": 0,
                  "offset": 0,
                  "limit": 0
                        },
                    "users": [
                    {
                        "userId": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "fullName": "string",
                        "emailAddress": "string",
                        "deptNumber": "string",
                        "userActive": "string",
                        "siteNumber": "string",
                        "managerId": "string",
                        "jobTitle": "string",
                        "directReportees": [
                                "string"
                        ],
                    "insertDate": "string"
                        }
                        ]
                            }
                
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Users"
  /devices:
    get:
      tags:
        - "Devices"
      description: "Devices API"
      operationId: "getDevicesByIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: deviceKeys
          in: query
          description: "Enter device keys"
          required: false
          type: "string"
        - name: userIds
          in: query
          description: "Enter user ids"
          required: false
          type: "string"
        - name: location
          in: query
          description: "Enter the location"
          required: false
          type: "string"
        - name: network
          in: query
          description: "Enter the network"
          required: false
          type: "string"
        - name: monitoring
          in: query
          description: "Enter the monitoring"
          required: false
          type: "string"
        - name: fields
          in: query
          description: "Enter the desired fields as comma separated"
          required: false
          type: "string"
        - name: offset
          in: query
          description: "Enter the desired offset"
          required: false
          type: "integer"
        - name: limit
          in: query
          description: "Enter the desired limit"
          required: false
          type: "integer"
        - name: filterBy
          in: query
          description: "Enter the desired filters"
          required: false
          type: "string"
      responses:
        '200':
          description: "Successful"
          examples:
            application/json: >
                    {
                      "metadata": {
                        "count": 0,
                        "offset": 0,
                        "limit": 0
                      },
                      "devices": [
                        {
                          "deviceKey": "string",
                          "userId": "string",
                          "deviceManufacture": "string",
                          "deviceModel": "string",
                          "deviceSerialNumber": "string",
                          "deviceName": "string",
                          "adSiteName": "string",
                          "businessUnit": "string",
                          "currentIpAddress": "string",
                          "ownerId": "string",
                          "macAddress": "string",
                          "numberOfCpus": "string",
                          "totalRam": "string",
                          "deviceStorageCapacity": "string",
                          "availableStorageCapacity": "string",
                          "operatingSystem": "string",
                          "operatingSystemVersion": "string",
                          "deviceEncrypted": "string",
                          "enrollmentDate": "string",
                          "lastSeen": "string",
                          "isEnrolled": "string",
                          "isMobile": "string",
                          "role": "string",
                          "isDesktop": "string",
                          "isLaptop": "string",
                          "isIos": "string",
                          "isMacOs": "string",
                          "isWindows": "string",
                          "isAndroid": "string",
                          "applicationData": [
                            "string"
                          ],
                          "network": [
                            {
                              "extrahop": {
                                "href": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "monitoring": [
                        {
                          "graphite": {
                            "href": "string"
                          }
                        }
                      ]
                                }
                
          schema:
            $ref: '#/definitions/Devices'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Devices"
  /devices/network:
    get:
      tags:
        - "Devices"
      operationId: "addnet"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 'Please enter the unique JWT token prefixed with Bearer '
          required: true
          type: "string"
        - name: type
          in: query
          description: "Please enter the type"
          required: false
          type: "string"
        - name: deviceName
          in: query
          description: "Please enter the unique alphanumeric device name"
          required: false
          type: "string"   
          
      responses:
        '200':
          description: Successful
          examples:
            application/json: >
                    {
                      "metadata": {
                        "count": 0
                      },
                      "network": [
                        {
                          "deviceName": "string",
                          "location": "string",
                          "extrahop": {}
                        }
                      ]
                         }
                
          schema:
            $ref: '#/definitions/network'
          
        '400':
          description: Bad Request
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '403':
          description: Forbidden
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server Error
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
            
  /devices/monitoring:
    get:
      tags:
        - "Devices"
      operationId: "addmont"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 'Please enter the unique JWT token prefixed with Bearer '
          required: true
          type: "string"
        - name: type
          in: query
          description: "Please enter the type"
          required: false
          type: "string"
        - name: storeNumber
          in: query
          description: "Please enter the store number"
          required: false
          type: "string"   
          
      responses:
        '200':
          description: Successful
          examples:
            application/json: >
                   {
                      "metadata": {
                        "count": 0
                      },
                      "monitoring": [
                        {
                          "key": "string",
                          "location": "string",
                          "graphite": {}
                        }
                      ]
                          }
          schema:
            $ref: '#/definitions/monitoring'
        '400':
          description: Bad Request
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '403':
          description: Forbidden
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server Error
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
            
                      
  
  
  /ownerships:
  
    post:
      tags:
      - "Ownerships"
      description: "Ownership API"
      operationId: "Post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Enter the Authorization token prefixed with Bearer"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Enter userId value"
        
        required: true
        schema:
          $ref: "#/definitions/ownerships"
      responses:
        200:
          description: "Successful"
          examples:
            application/json: >
                {
                  "ownerId": "string",
                  "inserDate": "string",
                  "ownerClaimed": "string",
                  "deviceKey": "string",
                  "comments": "string"
                             }
           
        400:
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
        500:
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "ownerships"
    put:
      tags:
      - "Ownerships"
      description: "Ownership API"
      operationId: "Put"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Enter the Authorization token prefixed with Bearer"
        required: true
        type: "string"
      - name: "deviceKey"
        in: "query"
        description: "Enter deviceKey value"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Enter userId value"
        
        required: true
        schema:
          $ref: "#/definitions/ownerships"
      responses:
        200:
          description: "Successful"
          examples:
            application/json: >
              {
                  "ownerId": "string",
                  "inserDate": "string",
                  "ownerClaimed": "string",
                  "deviceKey": "string",
                  "comments": "string"
                    }
        400:
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
        500:
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
      
    
    get:
      tags:
        - "Ownerships"
      description: "Ownership API"
      operationId: "getOwnershipByIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: ownerId
          in: query
          description: "Enter owner id value"
          required: true
          type: "string"
        - name: limit
          in: query
          description: "Enter the desired limit"
          required: false
          type: "string"
        - name: offset
          in: query
          description: "Enter the desired offset"
          required: false
          type: "integer"
      responses:
        '200':
          description: "Successful"
          examples:
            application/json: >
                 {
                          "metadata": {
                            "count": 0,
                            "offset": 0,
                            "limit": 0
                          },
                          "ownership": [
                            {
                              "ownerId": "string",
                              "deviceKey": "string",
                              "ownerClaimed": "string",
                              "insertDate": "string",
                              "comments": "string"
                            }
                          ]
                        }
          schema:
            $ref: '#/definitions/Ownership'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      
  /deviceactions:
    post:
      tags:
        - "Experience"
      description: "Experience API"
      operationId: "PostExperience"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        '200':
          description: "Successful"
          examples:
           application/json: >
                 {
                      "Route": "string",
                      "Properties": {
                        "fromUser": {
                          "userId": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "emailAddress": "string",
                          "deptNumber": "string",
                          "userActive": "string",
                          "siteNumber": "string",
                          "managerId": "string",
                          "jobTitle": "string",
                          "directReportees": [
                            "string"
                          ]
                        },
                        "toUser": {
                          "userId": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "emailAddress": "string",
                          "deptNumber": "string",
                          "userActive": "string",
                          "siteNumber": "string",
                          "managerId": "string",
                          "jobTitle": "string",
                          "directReportees": [
                            "string"
                          ]
                        },
                        "teamName": "string",
                        "device": {
                          "deviceKey": "string",
                          "userId": "string",
                          "deviceManufacturer": "string",
                          "deviceModel": "string",
                          "deviceSerialNumber": "string",
                          "adSiteName": "string",
                          "businessUnit": "string",
                          "currentIpAddress": "string",
                          "deviceName": "string",
                          "numberOfCPUs": "string",
                          "availableStorageCapacity": "string",
                          "isEnrolled": "string",
                          "totalRam": "string",
                          "ownerId": "string",
                          "lastSeen": "string",
                          "macAddress": "string",
                          "role": "string",
                          "enrolmentDate": "string",
                          "operatingSystem": "string",
                          "operatingSystemVersion": "string",
                          "isMobile": "string",
                          "isDesktop": "string",
                          "isLaptop": "string",
                          "isIos": "string",
                          "isMacOs": "string",
                          "isWindows": "string",
                          "isAndroid": "string",
                          "applicationData": [
                            "string"
                          ]
                        }
                      },
                      "inserDateTime": "string",
                      "remarks": "string",
                      "stage": "string",
                      "trackId": "string",
                      "updateDateTime": "string",
                      "userId": "string",
                      "workFlowId": "string",
                      "workFlowInitiated": "string"
                    }
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        
        - name: type
          in: query
          description: "Enter type value"
          required: true
          type: "string" 
          enum: [
            "claim",
            "reallocate"
           ]
        - name: "body"
          in: "body"
          description: "Enter userId value"
          
          required: true
          schema:
            $ref: '#/definitions/Experienceput'
            
    put:
      tags:
        - "Experience"
      description: "Experience API"
      operationId: "PutExperience"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        '200':
          description: "Successful"
          examples:
           application/json: >
                 {
                      "Route": "string",
                      "Properties": {
                        "fromUser": {
                          "userId": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "emailAddress": "string",
                          "deptNumber": "string",
                          "userActive": "string",
                          "siteNumber": "string",
                          "managerId": "string",
                          "jobTitle": "string",
                          "directReportees": [
                            "string"
                          ]
                        },
                        "toUser": {
                          "userId": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "emailAddress": "string",
                          "deptNumber": "string",
                          "userActive": "string",
                          "siteNumber": "string",
                          "managerId": "string",
                          "jobTitle": "string",
                          "directReportees": [
                            "string"
                          ]
                        },
                        "teamName": "string",
                        "device": {
                          "deviceKey": "string",
                          "userId": "string",
                          "deviceManufacturer": "string",
                          "deviceModel": "string",
                          "deviceSerialNumber": "string",
                          "adSiteName": "string",
                          "businessUnit": "string",
                          "currentIpAddress": "string",
                          "deviceName": "string",
                          "numberOfCPUs": "string",
                          "availableStorageCapacity": "string",
                          "isEnrolled": "string",
                          "totalRam": "string",
                          "ownerId": "string",
                          "lastSeen": "string",
                          "macAddress": "string",
                          "role": "string",
                          "enrolmentDate": "string",
                          "operatingSystem": "string",
                          "operatingSystemVersion": "string",
                          "isMobile": "string",
                          "isDesktop": "string",
                          "isLaptop": "string",
                          "isIos": "string",
                          "isMacOs": "string",
                          "isWindows": "string",
                          "isAndroid": "string",
                          "applicationData": [
                            "string"
                          ]
                        }
                      },
                      "inserDateTime": "string",
                      "remarks": "string",
                      "stage": "string",
                      "trackId": "string",
                      "updateDateTime": "string",
                      "userId": "string",
                      "workFlowId": "string",
                      "workFlowInitiated": "string"
                    }
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: trackId
          in: query
          description: "Enter trackId value"
          required: true
          type: "string"
        - name: type
          in: query
          description: "Enter type value"
          required: true
          type: "string" 
          enum: [
            "claim",
            "reallocate"
           ]
        - name: "body"
          in: "body"
          description: "Enter userId value"
          
          required: true
          schema:
            $ref: '#/definitions/Experienceput'
      
            
 
  /transactions/find:
    get:
      tags:
        - "Transactions"
      description: "Transactions API"
      operationId: "getTransactionByIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: userId
          in: query
          description: "Enter userId value"
          required: false
          type: "string"
        - name: deviceKey
          in: query
          description: "Enter deviceKey value"
          required: false
          type: "string"
        - name: workflowId
          in: query
          description: "Enter workflowId value"
          required: false
          type: "string"
        - name: trackId
          in: query
          description: "Enter trackId value"
          required: false
          type: "string"
        - name: limit
          in: query
          description: "Enter the desired limit"
          required: false
          type: "string"
        - name: offset
          in: query
          description: "Enter the desired offset"
          required: false
          type: "integer"
      responses:
        '200':
          description: "Successful"
          examples:
           application/json: >
               {
                  "metadata": {
                    "count": 0,
                    "offset": 0,
                    "limit": 0
                  },
                  "transactions": [
                    {
                      "deviceKey": "string",
                      "inserDateTime": "string",
                      "remarks": "string",
                      "stage": "string",
                      "trackId": "string",
                      "updateDateTime": "string",
                      "userId": "string",
                      "workFlowId": "string",
                      "workFlowInitiated": "string"
                    }
                  ]
                    }
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Transactions"
  /transactions:
    post:
      tags:
      - "Transactions"
      description: "Transaction API"
      operationId: "PostTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Enter the Authorization token prefixed with Bearer"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Enter userId value"
        
        required: true
        schema:
          $ref: "#/definitions/transactions"
      responses:
        200:
          description: "Successful"
          examples:
           application/json: >
                {
                      "deviceKey": "string",
                      "inserDateTime": "string",
                      "remarks": "string",
                      "stage": "string",
                      "trackId": "string",
                      "updateDateTime": "string",
                      "userId": "string",
                      "workFlowId": "string",
                      "workFlowInitiated": "string"
                    }
        400:
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
        500:
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "transactions"
    put:
      tags:
        - "Transactions"
      description: "Transaction API"
      operationId: "PutTransaction"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: trackId
          in: query
          description: "Enter trackId value"
          required: true
          type: "string"
        - in: body
          name: body
          description: "Enter userId value"
          
          required: true
          schema:
            $ref: '#/definitions/transactions'
      responses:
        '200':
          description: "Successful"
          examples:
           application/json: >
                {
                      "deviceKey": "string",
                      "inserDateTime": "string",
                      "remarks": "string",
                      "stage": "string",
                      "trackId": "string",
                      "updateDateTime": "string",
                      "userId": "string",
                      "workFlowId": "string",
                      "workFlowInitiated": "string"
                    }
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Transactions"
      
  /search:
    get:
      tags:
        - "Search"
      description: "Search API"
      operationId: "searchByIds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: "Enter the Authorization token prefixed with Bearer"
          required: true
          type: "string"
        - name: searchKey
          in: query
          description: "Enter searchKey value"
          required: true
          type: "string"
        
      responses:
        '200':
          description: "Successful"
          examples:
           application/json: >
                {
                      "metadata": {
                        "count": 0,
                        "offset": 0,
                        "limit": 0
                      },
                      "users": [
                        {
                          "userId": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "emailAddress": "string",
                          "deptNumber": "string",
                          "userActive": "string",
                          "siteNumber": "string",
                          "managerId": "string",
                          "jobTitle": "string",
                          "directReportees": [
                            "string"
                          ],
                          "insertDate": "string"
                        }
                      ]
                    }
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: "Bad Request"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Server Error"
          examples:
            application/json: >
                {
                    "code": 0,
                    "errors": [
                            {
                           "domain": "string",
                           "message": "string",
                           "reason": "string"
                            }
                              ],
                    "message": "string"
                }
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: "Users"
  
               
definitions:
  Experience:
    type: "object"
    properties:
      metadata:
        $ref: '#/definitions/Experience_metadata'
      user:
        $ref: '#/definitions/Experience_user'
  Ownership:
    type: "object"
    properties:
      metadata:
        $ref: '#/definitions/Ownership_metadata'
      ownership:
        type: "array"
        items:
          $ref: '#/definitions/Ownership_ownership'
  Users:
    type: "object"
    properties:
      metadata:
        $ref: '#/definitions/Ownership_metadata'
      users:
        type: "array"
        items:
          $ref: '#/definitions/Users_users'
  Devices:
    type: "object"
    properties:
      metadata:
        $ref: '#/definitions/Ownership_metadata'
      devices:
        type: "array"
        items:
          $ref: '#/definitions/Devices_devices'
      monitoring:
        type: "array"
        items:
          type: object
          properties:
            graphite:
              type: object
              properties:
                href:
                  type: "string"    
        
  transactions:
    type: "object"
    properties:
      deviceKey:
        type: "string"
      
      inserDateTime:
        type: "string"
      remarks:
        type: "string"
      stage:
        type: "string"
      trackId:
        type: "string"
      updateDateTime:
        type: "string"
      userId:
        type: "string"
      workFlowId:
        type: "string"
      workFlowInitiated:
        type: "string"
  Transaction:
    type: "object"
    properties:
      metadata:
        $ref: '#/definitions/Ownership_metadata'
      transactions:
        type: "array"
        items:
          $ref: '#/definitions/Transaction_transactions'
  
  error:
    type: "object"
    properties:
      code:
        type: "integer"
      errors:
        type: "array"
        items:
          $ref: '#/definitions/error_errors'
      message:
        type: "string"
  Experience_metadata_count:
    properties:
      allDevices:
        type: "integer"
      windows:
        type: "integer"
      ios:
        type: "integer"
      macos:
        type: "integer"
      android:
        type: "integer"
      desktop:
        type: "integer"
      laptop:
        type: "integer"
      mobile:
        type: "integer"
      directReportees:
        type: "integer"
  Experience_metadata:
    properties:
      count:
        $ref: '#/definitions/Experience_metadata_count'
      offset:
        type: "integer"
      limit:
        type: "integer"
  Experience_user_metadata:
    properties:
      allDevices:
        type: "integer"
      windows:
        type: "integer"
      ios:
        type: "integer"
      macos:
        type: "integer"
      android:
        type: "integer"
      desktop:
        type: "integer"
      laptop:
        type: "integer"
      mobile:
        type: "integer"
      directReportiees:
        type: "integer"
  Experience_user_user:
    properties:
      userId:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"
  Experience_user_directReportiees:
    properties:
      metadata:
        $ref: '#/definitions/Experience_user_metadata'
      user:
        $ref: '#/definitions/Experience_user_user'
  Experience_user:
    properties:
      userId:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"
      directReportiees:
        type: "array"
        items:
          $ref: '#/definitions/Experience_user_directReportiees'
  Ownership_metadata:
    properties:
      count:
        type: "integer"
      offset:
        type: "integer"
      limit:
        type: "integer"
  Ownership_ownership:
    properties:
      ownerId:
        type: "string"
      deviceKey:
        type: "string"
      ownerClaimed:
        type: "string"
      insertDate:
        type: "string"
      comments:
        type: "string"
  Users_users:
    properties:
      userId:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      fullName:
        type: "string"
      emailAddress:
        type: "string"
      deptNumber:
        type: "string"
      userActive:
        type: "string"
      siteNumber:
        type: "string"
      managerId:
        type: "string"
      jobTitle:
        type: "string"
      directReportees:
        type: "array"
        items:
          type: "string"
      insertDate:
        type: "string"
  Devices_devices:
    properties:
      deviceKey:
        type: "string"
      userId:
        type: "string"
      deviceManufacture:
        type: "string"
      deviceModel:
        type: "string"
      deviceSerialNumber:
        type: "string"
      deviceName:
        type: "string"
      adSiteName:
        type: "string"
      businessUnit:
        type: "string"
      currentIpAddress:
        type: "string"
      ownerId:
        type: "string"
      macAddress:
        type: "string"
      numberOfCpus:
        type: "string"
      totalRam:
        type: "string"
      deviceStorageCapacity:
        type: "string"
      availableStorageCapacity:
        type: "string"
      operatingSystem:
        type: "string"
      operatingSystemVersion:
        type: "string"
      deviceEncrypted:
        type: "string"
      enrollmentDate:
        type: "string"
      lastSeen:
        type: "string"
      
      isEnrolled:
        type: "string"
      isMobile:
        type: "string"
      role:
        type: "string"
      isDesktop:
        type: "string"
      isLaptop:
        type: "string"
      isIos:
        type: "string"
      isMacOs:
        type: "string"
      isWindows:
        type: "string"
      isAndroid:
        type: "string"
      applicationData:
        type: "array"
        items:
          type: "string"
      network:
        type: "array"
        items:
          type: object
          properties:
            extrahop:
              type: object
              properties:
                href:
                  type: "string"    
  Transaction_transactions:
    properties:
      deviceKey:
        type: "string"
      
      inserDateTime:
        type: "string"
      remarks:
        type: "string"
      stage:
        type: "string"
      trackId:
        type: "string"
      updateDateTime:
        type: "string"
      userId:
        type: "string"
      workFlowId:
        type: "string"
      workFlowInitiated:
        type: "string"
        
        
  
  Experienceput:
    type: "object"
    properties:
      Route:
        type: "string"
     
      Properties:
          properties:
            fromUser:
              properties:
                userId:
                  type: "string"
                firstName:
                  type: "string"
                lastName:
                  type: "string"
                fullName:
                  type: "string"
                emailAddress  :
                  type: "string"
                deptNumber:
                  type: "string"
                userActive:
                  type: "string"
                siteNumber:
                  type: "string" 
                managerId:
                  type: "string" 
                jobTitle:
                  type: "string"  
                directReportees:
                  type: "array"
                  items:
                    type: "string" 
        
            toUser:
              properties:
                userId:
                  type: "string"
                firstName:
                  type: "string"
                lastName:
                  type: "string"
                fullName:
                  type: "string"
                emailAddress  :
                  type: "string"
                deptNumber:
                  type: "string"
                userActive:
                  type: "string"
                siteNumber:
                  type: "string" 
                managerId:
                  type: "string" 
                jobTitle:
                  type: "string"
                directReportees:
                  type: "array"
                  items:  
                    type: "string"
            teamName:
              type: "string"
            device:
              properties:
                deviceKey:
                  type: "string"
                userId:
                  type: "string"
                deviceManufacturer:
                  type: "string"
                deviceModel:
                  type: "string"
                deviceSerialNumber  :
                  type: "string"
                adSiteName:
                  type: "string"
                businessUnit:
                  type: "string"
                currentIpAddress:
                  type: "string" 
                deviceName:
                  type: "string" 
                numberOfCPUs:
                  type: "string"
                availableStorageCapacity:
                  type: "string"
                isEnrolled:
                  type: "string" 
                totalRam:
                  type: "string" 
                ownerId:
                  type: "string"
                lastSeen:
                  type: "string" 
                macAddress:
                  type: "string" 
                role:
                  type: "string"
                enrolmentDate:
                  type: "string"
                operatingSystem:
                  type: "string" 
                operatingSystemVersion:
                  type: "string" 
                isMobile:
                  type: "string" 
                isDesktop:
                  type: "string"
                isLaptop:
                  type: "string"
                isIos:
                  type: "string"
                isMacOs:
                  type: "string"
                isWindows:
                  type: "string"
                isAndroid:
                  type: "string"
                applicationData:
                  type: "array"
                  items:
                    type: "string" 
                    
      inserDateTime:
        type: "string"
      remarks:
        type: "string"
      stage:
        type: "string"
      trackId:
        type: "string"
      updateDateTime:
        type: "string"
      userId:
        type: "string"
      workFlowId:
        type: "string"
      workFlowInitiated:
        type: "string"              
   
  ownerships:
    type: "object"
    properties:
      ownerId:
        type: "string"
      inserDate:
        type: "string"
      ownerClaimed:
        type: "string"
      deviceKey:
        type: "string"
      comments:
        type: "string"
        
  assets:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/inlineResponseMetaData'
      devices:
        type: array
        items:
          $ref: '#/definitions/inlineResponseAssets'
          
      monitoring:
        type: "array"
        items:
          type: object
          properties:
            graphite:
              type: object
              properties:
                href:
                  type: "string"
      
  network:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/inlineResponseMetaData'
      network:
        type: array
        items:
          $ref: '#/definitions/inlineResponseAssetsNetwork'
  monitoring:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/inlineResponseMetaData'
      monitoring:
        type: array
        items:
          $ref: '#/definitions/inlineResponseAssetsMonitoring'        
          
  inlineResponseAssets:
    properties:
      deviceId:
        type: "string"
      userId:
        type: "string"
      deviceManufacture:
        type: "string"
      deviceModel:
        type: "string"
      deviceSerialNumber:
        type: "string"
      deviceName:
        type: "string"
      adSiteName:
        type: "string"
      businessUnit:
        type: "string"
      currentIpAddress:
        type: "string"
      macAddress:
        type: "string"
      numberOfCpus:
        type: "string"
      totalRam:
        type: "string"
      deviceStorageCapacity:
        type: "string"
      availableStorageCapacity:
        type: "string"
      operatingSystem:
        type: "string"
      operatingSystemVersion:
        type: "string"
      deviceEncrypted:
        type: "string"
      enrollmentDate:
        type: "string"
      lastSeen:
        type: "string"
      insertDate:
        type: "string"
      isEnrolled:
        type: "string"
      isMobile:
        type: "string"
      isDesktop:
        type: "string"
      isLaptop:
        type: "string"
      isMacOs:
        type: "string"
      isIos:
        type: "string"
      isWindows:
        type: "string"
      isAndroid:
        type: "string"
      role:
        type: "string"
      deviceActions:
        type: array
        items:
          type: "string"
      applicationData:
        type: "array"
        items:
          type: "string"
        
      network:
        type: "array"
        items:
          type: object
          properties:
            extrahop:
              type: object
              properties:
                href:
                  type: "string"
       
  inlineResponseMetaData:
    properties:
      count:
        type: "integer"
        
  inlineResponseAssetsNetwork:
    properties:
      deviceName:
        type: "string"
      location:
        type: "string"
      extrahop:
        type: object  
        
  inlineResponseAssetsMonitoring:
    properties:
      key:
        type: "string"
      location:
        type: "string"
      graphite:
        type: object 
 
  
  
        
  error_errors:
    properties:
      domain:
        type: "string"
      message:
        type: "string"
      reason:
        type: "string"